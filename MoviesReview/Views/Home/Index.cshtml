@using MoviesReview.Models
@model Review
@{
    ViewBag.Title = "Home Page";
    var user = (User)Session["User"];
}

<div class="row">


    @Html.ActionLink("Recommend Movie", "RecommendMovie")

    <canvas id="jamalcanvs" style="color:red"> </canvas>
</div>

<script type="text/javascript">
    //var context = document.getElementById('canvas1').getContext("2d");
    //console.log(0);
    //var img = new Image();
    //img.onload = function () {
    //    context.drawImage(img, 100, 100, 150, 110, 0, 0, 300, 220);
    //}
    //img.src = "../Content/Horse.png";

    var canvas = document.getElementById('jamalcanvs');
    var ctx = canvas.getContext('2d');

    var image = new Image(60, 45);   // using optional size for image
    image.onload = drawImageActualSize; // draw when image has loaded

    // load an image of intrinsic size 300x227 in CSS pixels
    image.src = '../Content/MovieCanvas.png';

    function drawImageActualSize() {
        // use the intrinsic size of image in CSS pixels for the canvas element
        canvas.width = this.naturalWidth;
        canvas.height = this.naturalHeight;

        // will draw the image as 300x227 ignoring the custom size of 60x45
        // given in the constructor
        ctx.drawImage(this, 0, 0);

        // To use the custom size we'll have to specify the scale parameters
        // using the element's width and height properties - lets draw one
        // on top in the corner:
        //ctx.drawImage(this, 0, 0, this.width, this.height);
    }

</script>