@using MoviesReview.Models
@model Movie
@{
    ViewBag.Title = "Home Page";
    var user = (User)Session["User"];
}

<div class="row">

    @if (@Model.Id != 0)
    {
        <div style="margin:3%">
            <div style="margin:3%">
                <h4 style="margin:3%">
                    We found a movie that you will be intersted in :
                    @Html.DisplayFor(model => model.Name)
                </h4>

                @Html.ActionLink("Details", "Details", "Movies", new { id = Model.Id }, new { @class = "nav-link custom-nav-link btn btn-info" })
            </div>
        </div>
        <img style="margin-top:3%; width:200px; height: 150px;" src='@Model.ImageUrl' />
    }

    <canvas id="jamalcanvs" style="color:red"> </canvas>
</div>

<script type="text/javascript">
    var canvas = document.getElementById('jamalcanvs');
    var ctx = canvas.getContext('2d');

    var image = new Image(60, 45);   // using optional size for image
    image.onload = drawImageActualSize; // draw when image has loaded

    // load an image of intrinsic size 300x227 in CSS pixels
    image.src = '../Content/MovieCanvas.png';

    function drawImageActualSize() {
        // use the intrinsic size of image in CSS pixels for the canvas element
        canvas.width = this.naturalWidth;
        canvas.height = this.naturalHeight;

        // will draw the image as 300x227 ignoring the custom size of 60x45
        // given in the constructor
        ctx.drawImage(this, 0, 0);
    }

</script>